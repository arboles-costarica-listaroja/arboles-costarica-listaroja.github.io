---
title: "Árboles de Costa Rica en la Lista Roja de la UICN"
format: 
  dashboard:
    orientation: columns
server: shiny
---


```{r}
#| label: carga-paquetes
#| context: setup
#| warning: false
#| message: false


# Carga de paquetes
library(dplyr)
library(tidyr)
library(DT)
library(ggplot2)
library(plotly)
library(sf)
library(leaflet)
library(leaflet.extras)
library(leafem)
```


```{r}
#| label: carga-datos
#| context: data
#| eval: true


# RUTAS DE ARCHIVOS DE ENTRADA

# ASP
ARCHIVO_GPKG_ASP <- "asp.gpkg"

# Registros de presencia
ARCHIVO_GPKG_REGISTROS_PRESENCIA <- "registros-presencia.gpkg"


# CARGA DE DATOS

# ASP
asp <- st_read(ARCHIVO_GPKG_ASP, quiet = TRUE)

# Registros de presencia
registros <- 
  st_read(
    dsn = ARCHIVO_GPKG_REGISTROS_PRESENCIA,
    quiet = TRUE
  )
# Asignación del CRS WGS84 a los registros de presencia
st_crs(registros) <- 4326


# UNIONES

# Registros de presencia unidos con polígonos de zonas 
# (ASP, áreas de conservación, etc.)
registros_union_zonas <-
  st_join(
    x = registros,
    y = select(asp, codigo, nombre_asp)
  )
```

# {.sidebar}

```{r}
#| label: panel-widgets-entrada


# CATEGORÍAS DE CONSERVACIÓN EN LA LISTA ROJA

# Lista de categorías en la Lista Roja
lista_categorias <- unique(registros_union_zonas$category_iucn_redlist)
lista_categorias <- sort(lista_categorias)
lista_categorias <- c("Todas", lista_categorias)

# Widget de lista de selección de categorías
selectInput(
  inputId = "categoria",
  label = "Categoría en la Lista Roja",
  choices = lista_categorias,
  selected = "Todas"
)
```

# Riqueza de especies

## Column {width=50%}

```{r}
#| label: mapa
#| title: "Riqueza de especies"


leafletOutput(
 outputId =  "mapa"
)
```

## Column {width=50%}

```{r}
#| label: grafico_asp
#| title: "Riqueza de especies en Áreas Silvestres Protegidas (ASP)"


plotlyOutput(
	outputId =  "grafico_asp"
)
```

# Registros por zona y especie

```{r}
#| label: registros_asp
#| title: "Cantidad de registros por ASP y especie"

dataTableOutput(
	outputId =  "tabla_asp"
)
```


```{r}
#| label: servidor
#| context: server


# Función reactiva para filtrar los registros de presencia
filtrar_registros <- reactive({
  # Valor inicial del objeto que va a retornarse
  registros_filtrados <- registros_union_zonas

  if (input$categoria != "Todas") {
    registros_filtrados <-
      registros_filtrados |>
      filter(category_iucn_redlist == input$categoria)
  }

  return(registros_filtrados)
})


# Mapa
output$mapa <- renderLeaflet({
  # Filtrado del conjunto de datos
  registros_filtrados <- filtrar_registros()

  # Conteo de especies por ASP
  riqueza_especies_asp <-
    registros_filtrados |>
    st_drop_geometry() |>
    group_by(codigo) |>
    summarize(riqueza_especies = n_distinct(species, na.rm = TRUE))
  
  # Unión no espacial de ASP y riqueza de especies
  asp_union_riqueza <-
    left_join(
      x = asp,
      y = dplyr::select(riqueza_especies_asp, codigo, riqueza_especies),
      by = "codigo"
    ) |>
    replace_na(list(riqueza_especies = 0))  
  
  
  # Paleta de colores de riqueza de especies
  colores_riqueza_especies <- colorNumeric(
    palette = "Reds",
    domain = asp_union_riqueza$riqueza_especies,
    na.color = "transparent"
  )
  
  # Mapa de riqueza de especies en ASP
  leaflet() |>
    setView(
      lng = -84.19451,
      lat = 9.972725,
      zoom = 8
    ) |>
    addTiles(group = "OpenStreetMap") |>
    addProviderTiles(provider = providers$Esri.WorldImagery, group = "ESRI World Imagery") |>
    addProviderTiles(provider = providers$CartoDB.Positron, group = "Carto Positron") |>
    addPolygons(
      data = asp_union_riqueza,
      color = "darkgreen",
      fillColor = ~ colores_riqueza_especies(asp_union_riqueza$riqueza_especies),
      fillOpacity = 0.8,
      weight = 2.0,
      stroke = TRUE,
      popup = paste(
        paste0("<strong>ASP: </strong>", asp_union_riqueza$cat_manejo, " ", asp_union_riqueza$nombre_asp),
        paste0("<strong>Riqueza de especies: </strong>", asp_union_riqueza$riqueza_especies),
        sep = "<br>"
      ),
      group = "ASP"
    ) |>
    addLegend(
      position = "bottomleft",
      pal = colores_riqueza_especies,
      values = asp_union_riqueza$riqueza_especies,
      group = "Riqueza de especies en ASP",
      title = "Riqueza de especies en ASP"
    ) |>  
    addCircleMarkers(
      data = registros_filtrados,
      radius = 2,
      color = "red",
      clusterOptions = markerClusterOptions(),
      popup = paste(
        paste0("<strong>Especie: </strong>", registros_filtrados$species),
        paste0("<strong>Categoría en la Lista Roja: </strong>", registros_filtrados$category_iucn_redlist),
        paste0("<strong>ASP: </strong>", registros_filtrados$nombre_asp),
        sep = "<br>"
      ),
      group = "Registros de presencia"
    ) |>
    addLayersControl(
      baseGroups = c("OpenStreetMap", "ESRI World Imagery", "Carto Positron"),
      overlayGroups = c("Riqueza de especies en ASP", "Registros de presencia")
    ) |>
    addScaleBar(
      position = "bottomright", 
      options = scaleBarOptions(imperial = FALSE)
    ) |>    
    addResetMapButton() |>
    addSearchOSM() |>
    addMouseCoordinates() |>
    addFullscreenControl()
  })


# Gráfico de cantidad de especies en ASP
output$grafico_asp <- renderPlotly({
  # Filtrado del conjunto de datos
  registros_filtrados <- filtrar_registros()

  
  # Conteo de especies por ASP
  riqueza_especies_asp <-
    registros_filtrados |>
    st_drop_geometry() |>
    group_by(codigo) |>
    summarize(riqueza_especies = n_distinct(species, na.rm = TRUE))
  
  # Unión no espacial de ASP y riqueza de especies
  asp_union_riqueza <-
    left_join(
      x = asp,
      y = dplyr::select(riqueza_especies_asp, codigo, riqueza_especies),
      by = "codigo"
    ) |>
    replace_na(list(riqueza_especies = 0))  

  # Gráfico
  grafico_ggplot2 <-
    asp_union_riqueza |>
    distinct(codigo, nombre_asp, riqueza_especies) |>
    arrange(desc(riqueza_especies)) |>
    slice((1:25)) |>
    ggplot(aes(
      x = reorder(nombre_asp, -riqueza_especies),
      y = riqueza_especies,
      text = paste(
        paste0("ASP: ", nombre_asp),
        paste0("Cantidad de especies: ", riqueza_especies),
        sep = "<br>"
      )    
    )) +
    geom_col() +
    xlab("ASP") +
    ylab("Riqueza de especies") +  
    theme_minimal()
  
  # Gráfico plotly
  grafico_ggplot2 |>
    ggplotly(tooltip = "text") |> 
    layout(
      xaxis = list(tickangle = 45)
    ) |>
    config(locale = "es")
})


# Tabla de lista de especies en ASP
output$tabla_asp <- renderDataTable({
  # Filtrado del conjunto de datos
  registros_filtrados <- filtrar_registros()

  
  # Tabla interactiva
  registros_filtrados |>
    st_drop_geometry() |>
    group_by(nombre_asp, species, category_iucn_redlist) |>
    summarize(n = n()) |>
    arrange(nombre_asp, species) |>
    datatable(
      colnames = c("ASP", "Especie", "Categoría en la Lista Roja", "Cantidad de registros"),
      rownames = FALSE,
      options = list(
        pageLength = 10,
        language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
      )
    )
})
```
